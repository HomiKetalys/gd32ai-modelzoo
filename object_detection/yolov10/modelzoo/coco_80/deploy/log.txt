{'yaml': 'modelzoo/coco_80/coco_80.yaml', 'weight': 'modelzoo/coco_80/weights/best.pth', 'convert_type': 1, 'tflite_val_path': '../../../datasets/coco2017/images/val2017', 'c_project_path': None, 'stm32cubeai_path': 'D:/STM32CubeIDE_1.12.1/STM32CubeIDE/STM32Cube/Repo/Packs/STMicroelectronics/X-CUBE-AI/8.0.1', 'series': 'h7', 'conf_thr': 0.3, 'nms_thr': 0.5, 'eval': True, 'compiler': 1}
pytorch_model_path:modelzoo/coco_80/weights/best.pth
Load yaml sucess...
<submodules.FastestDet.utils.tool.LoadYaml object at 0x000001F2D5157340>
load weight from:modelzoo/coco_80/weights/best.pth
params:230581
[INFO] Register count_convNd() for <class 'torch.nn.modules.conv.Conv2d'>.
[INFO] Register count_normalization() for <class 'torch.nn.modules.batchnorm.BatchNorm2d'>.
[INFO] Register zero_ops() for <class 'torch.nn.modules.activation.ReLU6'>.
[INFO] Register zero_ops() for <class 'torch.nn.modules.container.Sequential'>.
[INFO] Register zero_ops() for <class 'torch.nn.modules.pooling.MaxPool2d'>.
[INFO] Register count_upsample() for <class 'torch.nn.modules.upsampling.Upsample'>.
flops:0.125739008GFLOPs
Load yaml sucess...
<submodules.FastestDet.utils.tool.LoadYaml object at 0x000001F2C930C070>
Checking 0/1...
Checking 0/1...
Load yaml sucess...
<submodules.FastestDet.utils.tool.LoadYaml object at 0x000001F2D5154C40>
load weight from:results/deploy\coco_80_0033\tflite
computer mAP...
creating index...
index created!
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=60.25s).
Accumulating evaluation results...
DONE (t=12.24s).
 Average Precision  (AP) @[ IoU=0.40:0.95 | area=   all | maxDets=100 ] = 0.101
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.166
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.075
 Average Precision  (AP) @[ IoU=0.40:0.95 | area= small | maxDets=100 ] = 0.016
 Average Precision  (AP) @[ IoU=0.40:0.95 | area=medium | maxDets=100 ] = 0.121
 Average Precision  (AP) @[ IoU=0.40:0.95 | area= large | maxDets=100 ] = 0.202
 Average Recall     (AR) @[ IoU=0.40:0.95 | area=   all | maxDets=  1 ] = 0.126
 Average Recall     (AR) @[ IoU=0.40:0.95 | area=   all | maxDets= 10 ] = 0.190
 Average Recall     (AR) @[ IoU=0.40:0.95 | area=   all | maxDets=100 ] = 0.197
 Average Recall     (AR) @[ IoU=0.40:0.95 | area= small | maxDets=100 ] = 0.041
 Average Recall     (AR) @[ IoU=0.40:0.95 | area=medium | maxDets=100 ] = 0.264
 Average Recall     (AR) @[ IoU=0.40:0.95 | area= large | maxDets=100 ] = 0.373

IOU:0.4 MAP:0.1921 Recall:0.3590
[['person', '0.4511', '0.6314'], ['bicycle', '0.1271', '0.2975'], ['car', '0.1675', '0.3240'], ['motorbike', '0.3323', '0.4960'], ['aeroplane', '0.4814', '0.6573'], ['bus', '0.4138', '0.5719'], ['train', '0.6121', '0.7842'], ['truck', '0.1144', '0.2530'], ['boat', '0.1276', '0.3047'], ['traffic light', '0.0724', '0.1837'], ['fire hydrant', '0.3034', '0.4257'], ['stop sign', '0.4171', '0.4933'], ['parking meter', '0.1583', '0.2333'], ['bench', '0.0911', '0.2809'], ['bird', '0.0805', '0.2182'], ['cat', '0.4738', '0.7574'], ['dog', '0.2252', '0.4128'], ['horse', '0.3471', '0.4982'], ['sheep', '0.2454', '0.5069'], ['cow', '0.1962', '0.3868'], ['elephant', '0.4715', '0.6824'], ['bear', '0.5413', '0.6620'], ['zebra', '0.6796', '0.8172'], ['giraffe', '0.5667', '0.7328'], ['backpack', '0.0128', '0.0836'], ['umbrella', '0.1721', '0.3947'], ['handbag', '0.0113', '0.0463'], ['tie', '0.0997', '0.2126'], ['suitcase', '0.0657', '0.2706'], ['frisbee', '0.1223', '0.2696'], ['skis', '0.1296', '0.3402'], ['snowboard', '0.0749', '0.1159'], ['sports ball', '0.0550', '0.0913'], ['kite', '0.1833', '0.3512'], ['baseball bat', '0.0521', '0.1781'], ['baseball glove', '0.1092', '0.1892'], ['skateboard', '0.1332', '0.3799'], ['surfboard', '0.1760', '0.3717'], ['tennis racket', '0.2099', '0.3644'], ['bottle', '0.0507', '0.1990'], ['wine glass', '0.0148', '0.1195'], ['cup', '0.0827', '0.2725'], ['fork', '0.0216', '0.3116'], ['knife', '0.0065', '0.0491'], ['spoon', '0.0001', '0.0040'], ['bowl', '0.1425', '0.3690'], ['banana', '0.1027', '0.3799'], ['apple', '0.0648', '0.2594'], ['sandwich', '0.2471', '0.5311'], ['orange', '0.1915', '0.3833'], ['broccoli', '0.1861', '0.6171'], ['carrot', '0.0993', '0.3208'], ['hot dog', '0.1047', '0.1496'], ['pizza', '0.3962', '0.5509'], ['donut', '0.1220', '0.2574'], ['cake', '0.1005', '0.2627'], ['chair', '0.0784', '0.3378'], ['sofa', '0.2449', '0.5211'], ['pottedplant', '0.1098', '0.3761'], ['bed', '0.3834', '0.5644'], ['diningtable', '0.2624', '0.5452'], ['toilet', '0.4339', '0.7318'], ['tvmonitor', '0.3734', '0.6076'], ['laptop', '0.2910', '0.4978'], ['mouse', '0.1507', '0.2736'], ['remote', '0.0066', '0.0671'], ['keyboard', '0.3199', '0.5359'], ['cell phone', '0.0834', '0.1450'], ['microwave', '0.2468', '0.4909'], ['oven', '0.1509', '0.4755'], ['toaster', '0.0000', '0.0000'], ['sink', '0.1572', '0.3644'], ['refrigerator', '0.2432', '0.6032'], ['book', '0.0146', '0.0999'], ['clock', '0.2917', '0.4082'], ['vase', '0.0895', '0.1913'], ['scissors', '0.0371', '0.1944'], ['teddy bear', '0.1586', '0.3613'], ['hair drier', '0.0000', '0.0000'], ['toothbrush', '0.0033', '0.0175']]
Load yaml sucess...
Command:
D:/STM32CubeIDE_1.12.1/STM32CubeIDE/STM32Cube/Repo/Packs/STMicroelectronics/X-CUBE-AI/8.0.1\Utilities\windows\stm32ai.exe generate --name network_1 -m results/deploy\coco_80_0033\tflite\model_front.tflite --type tflite --compression none --verbosity 1 --workspace results/deploy\coco_80_0033\temp --output results/deploy\coco_80_0033\Edge_AI\model --allocate-inputs --series stm32h7 --allocate-outputs
will be excuted to generate net codes
Net codes generation successful
Command:
D:/STM32CubeIDE_1.12.1/STM32CubeIDE/STM32Cube/Repo/Packs/STMicroelectronics/X-CUBE-AI/8.0.1\Utilities\windows\stm32ai.exe generate --name network_2 -m results/deploy\coco_80_0033\tflite\model_post.tflite --type tflite --compression none --verbosity 1 --workspace results/deploy\coco_80_0033\temp --output results/deploy\coco_80_0033\Edge_AI\model --allocate-inputs --series stm32h7 --allocate-outputs
will be excuted to generate net codes
Net codes generation successful
