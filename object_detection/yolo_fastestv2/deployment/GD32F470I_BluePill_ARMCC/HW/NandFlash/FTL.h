/*********************************************************************************************************
* 模块名称：FTL.h
* 摘    要：FTL层算法
* 当前版本：1.0.0
* 作    者：Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
* 完成日期：2021年07月01日 
* 内    容：
* 注    意：
**********************************************************************************************************
* 取代版本：
* 作    者：
* 完成日期：
* 修改内容：
* 修改文件：
*********************************************************************************************************/
#ifndef _FTL_H_
#define _FTL_H_

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "DataType.h"
#include "NandFlash.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/
#define INVALID_ADDR    (0xFFFFFFFF)  //无效地址
#define FTL_SECTOR_SIZE (2048)        //扇区大小，对应1页数据

/*********************************************************************************************************
*                                              枚举结构体
*********************************************************************************************************/

/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
u32  InitFTL(void);                                  //初始化FTL层算法
void FTLBadBlockMark(u32 blockNum);                  //标记某一个块为坏块
u32  FTLCheckBlockFlag(u32 blockNum);                //检查坏块标志位
u32  FTLSetBlockUseFlag(u32 blockNum);               //标记某一个快已经使用
u32  FTLLogicNumToPhysicalNum(u32 logicNum);         //逻辑块号转换为物理块号
u32  CreateLUT(void);                                //重新创建LUT表
u32  FTLFormat(void);                                //格式化NAND 重建LUT表
u32  FTLFineUnuseBlock(u32 startBlock, u32 oddEven); //查找未使用的块
u32  FTLWriteSectors(u8 *pBuffer, u32 sectorNo, u32 sectorSize, u32 sectorCount); //写扇区
u32  FTLReadSectors(u8 *pBuffer, u32 sectorNo, u32 sectorSize, u32 sectorCount);  //读扇区

#endif
