/*********************************************************************************************************
* 模块名称：Queue.h
* 摘    要：Queue模块
* 当前版本：1.0.0
* 作    者：SZLY(COPYRIGHT 2018 - 2020 SZLY. All rights reserved.)
* 完成日期：2020年01月01日 
* 内    容：
* 注    意：                                                                  
**********************************************************************************************************
* 取代版本：
* 作    者：
* 完成日期：
* 修改内容：
* 修改文件：
*********************************************************************************************************/
#ifndef _QUEUE_H_
#define _QUEUE_H_

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "DataType.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                              枚举结构体
*********************************************************************************************************/
//定义数据类型，即队列中元素的数据类型
typedef u8  DATA_TYPE;

//定义循环队列结构体
typedef struct
{
  i16       front;    //头指针，队非空时指向队头元素
  i16       rear;     //尾指针，队非空时指向队尾元素的下一个位置
  i16       bufLen;   //队列的总容量
  i16       elemNum;  //当前队列中的元素的数量
  DATA_TYPE *pBuffer; //循环队列的缓冲区
}StructCirQue;

/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void  InitQueue(StructCirQue* pQue, DATA_TYPE* pBuf, i16 len);  //初始化队列
void  ClearQueue(StructCirQue* pQue);                           //清队列
u8    QueueEmpty(StructCirQue* pQue);                           //判断队列是否为空，1为空，0为非空
i16   QueueLength(StructCirQue* pQue);                          //返回队列中元素个数，即为队列的长度
i16   EnQueue(StructCirQue* pQue, DATA_TYPE* pInput, i16 len);  //入队len个元素
i16   DeQueue(StructCirQue* pQue, DATA_TYPE* pOutput, i16 len); //出队len个元素

#endif
